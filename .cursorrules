# Sorta Systems Website - Development Rules

## Project Overview
Static website for Sorta Systems built with vanilla HTML, Tailwind CSS, and JavaScript.
Hosted on Cloudflare Pages with automatic deployment from GitHub (secur3et/sortasystems).

## Tech Stack
- **Frontend**: HTML5, Tailwind CSS (via CDN), Vanilla JavaScript
- **Hosting**: Cloudflare Pages
- **Deployment**: GitHub → Cloudflare Pages (automatic)
- **Backend**: n8n webhooks for form submissions
- **Local Dev**: Python HTTP server on port 5173

## File Structure
- `index.html` - Main landing page
- `blueprint.html` - Free blueprint form page
- `public/footer.js` - Reusable footer component (versioned)
- `public/logo.svg` - Company logo
- `public/logos/*` - Technology logos
- `public/hero/loop.mp4` - Hero video background
- `_headers` - Cloudflare Pages cache control configuration

## Component Architecture

### Reusable Footer Component
- **Location**: `/public/footer.js`
- **Usage**: Included in all pages via version query string
- **Implementation**: JavaScript-based component that injects into `#footer-placeholder`
- **Versioning**: Use `?v=X.X` query string for cache busting

**Example:**
```html
<div id="footer-placeholder"></div>
<script src="/public/footer.js?v=1.0"></script>
```

**When updating footer.js:**
1. Make changes to `/public/footer.js`
2. Increment version in ALL pages using it (e.g., `?v=1.0` → `?v=1.1`)
3. Commit and deploy

## Caching Strategy

### Cache Control via `_headers` File
- **HTML files**: `max-age=0, must-revalidate` - Always fresh
- **JS/CSS**: `max-age=3600, must-revalidate` - Cache 1 hour
- **Images/Static**: `max-age=604800, immutable` - Cache 1 week

### Version Query Strings
- **Purpose**: Force browsers to fetch new versions of JS files
- **When to increment**: Whenever you modify a JS file
- **Format**: `?v=MAJOR.MINOR` (e.g., `?v=1.0`, `?v=1.1`, `?v=2.0`)
- **Files to update**: Both `index.html` and `blueprint.html` when changing `footer.js`

## Design System

### Colors
- **Primary Blue**: `#0A74DA` (Sorta Blue)
- **Hover Blue**: `#085CB0`
- **Dark Background**: `#2C3E50`
- **Light Background**: `#F9FAFB` (gray-50)
- **White**: `#FFFFFF`

### Typography
- **Font Family**: System fonts via Tailwind
- **Hero Heading**: `text-5xl md:text-6xl lg:text-7xl`
- **Section Headings**: `text-3xl md:text-4xl`
- **Body Text**: `text-lg md:text-xl`

### Buttons
- **Primary CTA**: `bg-[#0A74DA] hover:bg-[#085CB0]`
- **Padding**: `px-6 py-3` or `px-8 py-4` for hero
- **Text**: `text-base` or `text-lg`
- **All CTAs**: Use consistent text "Get Your Free Blueprint"

## Form Integration

### Blueprint Form (`blueprint.html`)
- **Fields**: 6 total (businessName, websiteUrl, emailAddress, timeConsumingTask, hoursPerWeek, successfulOutcome)
- **Validation**: Client-side JavaScript validation before submission
- **Endpoint**: `https://n8n.secur3-et.co.uk/webhook/sortasystems-forms` (production)
- **Test Endpoint**: `https://n8n.secur3-et.co.uk/webhook-test/sortasystems-forms`
- **Method**: POST with JSON payload
- **CORS**: Handled by n8n webhook (OPTIONS + POST)

### Form Data Sent
```javascript
{
  businessName: "...",
  websiteUrl: "...",
  emailAddress: "...",
  timeConsumingTask: "...",
  hoursPerWeek: 10,
  successfulOutcome: "...",
  submissionDate: "ISO timestamp",
  formVersion: "2.0",
  userAgent: "...",
  referrer: "...",
  timestamp: 1234567890
}
```

**Note**: IP address is captured by n8n from request headers (not sent in payload)

## Content Guidelines

### Tone & Voice
- **Results-oriented**: Focus on outcomes, not features
- **Authoritative**: Confident without being salesy
- **Low-pressure**: No aggressive CTAs, emphasize "no obligation"
- **Specific**: Use concrete numbers (20+ hours, 48 hours, etc.)
- **Personal**: Written from Evan's perspective ("I build...")

### Key Messaging
- **Hero**: Emphasize time savings and automation benefits
- **Process**: Simple 3-step approach
- **Trust**: Personal background and expertise
- **Value**: Free blueprint, no sales calls, practical systems

## Deployment Workflow

### Local Development
```bash
python3 -m http.server 5173 --bind 127.0.0.1
# Access at: http://127.0.0.1:5173/
```

### Git & Deployment
```bash
git add -A
git commit -m "descriptive message"
git push origin main
# Cloudflare Pages auto-deploys in 1-2 minutes
```

### Deployment Checklist
- [ ] Test locally on http://127.0.0.1:5173/
- [ ] Check both `index.html` and `blueprint.html`
- [ ] If footer.js was modified, increment version in both pages
- [ ] Commit with descriptive message
- [ ] Push to GitHub main branch
- [ ] Wait 1-2 minutes for Cloudflare Pages deployment
- [ ] Test live site

## Best Practices

### When Editing HTML
1. Maintain consistent indentation (2 spaces)
2. Use semantic HTML5 tags
3. Keep Tailwind classes organized (layout → spacing → colors → effects)
4. Test mobile responsiveness

### When Editing JavaScript
1. Add comments for complex logic
2. Use descriptive variable names
3. Implement error handling for fetch requests
4. Log important actions to console for debugging

### When Creating New Pages
1. Copy structure from existing page
2. Include `<div id="footer-placeholder"></div>`
3. Include `<script src="/public/footer.js?v=1.0"></script>`
4. Update all internal links to include new page
5. Test navigation flow

### When Modifying Shared Components
1. **Footer**: Edit `/public/footer.js` → increment version in all pages
2. **Future components**: Follow same versioned approach
3. Test on ALL pages that use the component

## Common Tasks

### Update CTA Links
All CTAs should point to `/blueprint.html` with text "Get Your Free Blueprint"

### Change Webhook Endpoint (Testing)
1. Edit `blueprint.html` line ~209
2. Change to: `https://n8n.secur3-et.co.uk/webhook-test/sortasystems-forms`
3. **Remember to change back before deploying to production**

### Add New Section to Homepage
1. Alternate background colors: `bg-white` and `bg-gray-50`
2. Use consistent padding: `py-16 md:py-20`
3. Center content with `max-w-6xl mx-auto px-6`
4. Maintain visual hierarchy with heading sizes

## Analytics & Tracking

### Current Setup
- Cloudflare built-in analytics (automatic)
- Form submissions tracked via n8n webhook

### Future Options (Not Implemented)
- Client-side page visit tracking via n8n webhook
- Cloudflare Web Analytics (add beacon script)
- Custom analytics via footer.js component

## Troubleshooting

### Form Not Submitting
1. Check browser console for CORS errors
2. Verify webhook URL is correct (production vs test)
3. Check n8n webhook is active and handling OPTIONS requests
4. Test with browser Network tab to see request/response

### Changes Not Showing After Deployment
1. Check Cloudflare Pages build logs
2. Hard refresh browser (Ctrl+Shift+R / Cmd+Shift+R)
3. Verify version query strings were incremented
4. Check `_headers` file is deployed correctly

### Footer Not Appearing
1. Verify `#footer-placeholder` div exists
2. Check `footer.js` script tag is present
3. Check browser console for JavaScript errors
4. Verify `footer.js` file exists in `/public/`

## Security

### Form Security
- Client-side validation (UX)
- Server-side validation (n8n)
- HTTPS only
- CORS properly configured
- No sensitive data in client-side code

### No API Keys in Frontend
- Never commit API keys to repository
- Use environment variables in n8n
- Webhook URLs are public but don't expose sensitive data

## Performance

### Optimization Applied
- Tailwind CSS via CDN (cached globally)
- Versioned JS files for cache control
- `_headers` file for optimal caching
- Minimal JavaScript (vanilla, no frameworks)
- Optimized images and logos

### Future Optimizations
- Consider lazy loading for hero video
- Compress images further if needed
- Add loading="lazy" to images below fold

---

**Last Updated**: October 2, 2025
**Maintained by**: Evan (Sorta Systems)


